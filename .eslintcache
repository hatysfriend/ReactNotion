[{"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\index.js":"1","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\App.js":"2","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\reportWebVitals.js":"3","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\SidebarComponent.jsx":"4","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\HeaderComponent.jsx":"5","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\PageComponent.jsx":"6","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\ToggleComponent.jsx":"7"},{"size":524,"mtime":1610705161692,"results":"8","hashOfConfig":"9"},{"size":2571,"mtime":1611168900359,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1610695518735,"results":"11","hashOfConfig":"9"},{"size":4193,"mtime":1611169969207,"results":"12","hashOfConfig":"9"},{"size":497,"mtime":1610955079113,"results":"13","hashOfConfig":"9"},{"size":2092,"mtime":1611226098160,"results":"14","hashOfConfig":"9"},{"size":396,"mtime":1611226098161,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"e0insv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\index.js",[],["34","35"],"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\App.js",["36"],"import \"./styles/App.css\";\r\nimport PageComponent from \"./components/PageComponent\";\r\nimport SidebarComponent from \"./components/SidebarComponent\";\r\nimport HeaderComponent from \"./components/HeaderComponent\";\r\nimport { useState } from \"react\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nlibrary.add(fas, fab);\r\n\r\nexport default function App() {\r\n  const [DBdata, setDBdata] = useState(DataFromDB);\r\n  const [showtextbox, setShowTextbox] = useState(false);\r\n\r\n  //checking new file name and add\r\n  const handleAdd = (value) => {\r\n    let arr = [...DBdata];\r\n    if (value === \"\" || value === null) {\r\n      console.log(\"YOU ENTERED A NULL/EMPTY VALUE\");\r\n    } else {\r\n      let boolExistingName = false;\r\n      arr.map((page) => {\r\n        if (page.pageName === value) boolExistingName = true;\r\n      });\r\n      if (!boolExistingName) {\r\n        console.log(`valuePageName: ${value}`);\r\n        arr.push({\r\n          pageId: Math.random().toString(36).substring(7),\r\n          pageName: value,\r\n          pageData: value.pageData,\r\n          file_inside: \"\",\r\n        });\r\n        setDBdata(arr);\r\n        onOffBtn(showtextbox);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onOffBtn = (showtextbox) => {\r\n    setShowTextbox(!showtextbox);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SidebarComponent DBdata={DBdata} onAdd={handleAdd} showtextbox={showtextbox} onOffBtn={onOffBtn} />\r\n\r\n      <div className=\"mainContent\">\r\n        <HeaderComponent DBdata={DBdata} />\r\n        <PageComponent DBdata={DBdata} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst DataFromDB = [\r\n  {\r\n    \r\n    pageId: \"846u9qm\",\r\n    pageName: \"programing\",\r\n    pageData: \"fgfh\",\r\n    file_inside: [\r\n      {\r\n        pageId: \"abc\",\r\n        pageName: \"React\",\r\n        pageData: \"A/A\",\r\n        file_inside: [\r\n          {\r\n            pageId: \"abcde\",\r\n            pageName: \"State\",\r\n            pageData: \"4\",\r\n            file_inside: []\r\n          },]\r\n      },\r\n      {\r\n        pageId: \"abcd\",\r\n        pageName: \"Java\",\r\n        pageData: \"3\",\r\n        file_inside: []\r\n      },\r\n      {\r\n        pageId: \"abcde\",\r\n        pageName: \"C#\",\r\n        pageData: \"5\",\r\n        file_inside: []\r\n      },\r\n    ],\r\n    \r\n  },{pageId: \"cfhjsd\",\r\n    pageName: \"Leage Of Legends\",\r\n    pageData: \"6\",\r\n    file_inside: [\r\n      {\r\n        pageId: \"abcfdde\",\r\n        pageName: \"Lux\",\r\n        pageData: \"7\",\r\n        file_inside: []\r\n      }\r\n    ]}\r\n  \r\n]\r\n","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\reportWebVitals.js",[],"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\SidebarComponent.jsx",["37"],"import React from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n//import PageComponent from \"./PageComponent\";\r\nimport \"../styles/sidebar.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function SidebarComponent({\r\n  DBdata,\r\n  onAdd,\r\n  showtextbox,\r\n  onOffBtn,\r\n}) {\r\n\r\n\r\n  //function to enable textbox and button\r\n  function AddNewfile(bool) {\r\n    if (bool) {\r\n      return (\r\n        <React.Fragment className=\"nav_input_btn\">\r\n          <input className=\"addinput\" type=\"text\" id='newfile' />\r\n          <button\r\n            className=\"addbtn2\"\r\n            onClick={() => onAdd(document.getElementById(\"newfile\").value)}\r\n          >\r\n            ✔\r\n          </button>\r\n        </React.Fragment>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function showChildFile(parentObj) {\r\n    console.log(parentObj.pageName + \"'s btn clicked\");\r\n\r\n    parentObj.file_inside.map(childPage => {\r\n      let a ='<div className=\"navFont\" to=\"/\" id=\"'+childPage.pageName\r\n      +'\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <FontAwesomeIcon icon=\"caret-down\"'\r\n      +'/>'+childPage.pageName+'</div>'\r\n      console.log(a)\r\n\r\n      document.getElementById(parentObj.pageName).innerHTML +=a;\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  //sidebarcompenent rendering\r\n  return (\r\n    <HashRouter>\r\n      <head>\r\n        <meta\r\n          name=\"viewport\"\r\n          content=\"width=device-width, initial-scale=1\"\r\n        ></meta>\r\n      </head>\r\n\r\n      <body>\r\n        {/* sidebar_header */}\r\n        <div className=\"sidenav a\">\r\n          <img src=\"imgs/icon.png\" alt=\"\" height=\"28px\" width=\"35px\"></img>\r\n          <h1>React Notion</h1>\r\n\r\n          {/* sidebar_add_NewFile_btn */}\r\n          <div>\r\n            <div className=\"addbtn\" onClick={() => onOffBtn(showtextbox)}>\r\n              + Add New File\r\n            </div>\r\n            {AddNewfile(showtextbox)}\r\n            <text className=\"errorMessage\" value=\"\" id=\"errorMessage\"></text>\r\n          </div><br />\r\n\r\n          {/*showing pagelist */}\r\n          {DBdata.map((page) => {\r\n            return (\r\n              <React.Fragment>\r\n\r\n                {/* parent file name */}\r\n                <div className=\"navFont\" to=\"/\" id={page.pageName}>\r\n                  &nbsp;&nbsp;<FontAwesomeIcon icon=\"caret-down\" onClick={() => showChildFile(page)} />\r\n                  {page.pageName}\r\n                </div>\r\n\r\n                {/* <div className=\"navFont\" to=\"/\" id=\"React\">\r\n                  &nbsp;&nbsp;<FontAwesomeIcon icon=\"caret-down\" onClick={() => showChildFile([object Object])} />\r\n                  React</div> */}\r\n\r\n                \r\n\r\n                {/* child file name*/}\r\n                <div id='a'></div>\r\n\r\n\r\n                <div>\r\n                  \r\n                </div>\r\n\r\n                <br />\r\n              </React.Fragment>\r\n            );\r\n          }\r\n\r\n\r\n          )}\r\n        </div>\r\n      </body>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\n\r\n  // function file_insideLoop(page) { //1\r\n  //   let pageNameStructure = [];\r\n  //   const count = 1;\r\n  //   pageNameStructure.push(looping(page, pageNameStructure,count));\r\n  //   console.log(\"arr: \" + pageNameStructure)\r\n  //   return (pageNameStructure);\r\n  // }\r\n\r\n\r\n  // function looping(page, arr, count) {\r\n  //   if (page.file_inside.length !== 0) {\r\n  //     page.file_inside.map((a) => {//C£\r\n  //       arr.push([a, count])\r\n  //       if (a.file_inside.length !== 0) {\r\n  //         count++\r\n  //         arr.push(looping(a, arr, count))\r\n  //       }\r\n  //       count=1\r\n  //     })\r\n  //     return '';\r\n  //   }\r\n  //   return '';\r\n  // }\r\n\r\n  // function nbsp(count){  // 1\r\n  //   let space =<p>&nbsp;</p>\r\n  //   space = space*count;\r\n  //   console.log(space)\r\n  //   return space;\r\n  // };\r\n\r\n  // {file_insideLoop(page).map((a) => {\r\n  //   if (a !== '') {\r\n  //     {console.log(\"a[0]:\" + a[0].pageName)}\r\n  //     {console.log(\"a[1]:\" + a[1])}\r\n\r\n  //     return (\r\n        \r\n  //       <div className=\"navFont\" to=\"/\">\r\n  //          {nbsp(a[1])} \r\n  //         <FontAwesomeIcon icon=\"caret-down\" onClick={''} />\r\n  //          {a[0].pageName}\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // })} ","C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\HeaderComponent.jsx",[],"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\PageComponent.jsx",[],"C:\\Users\\urgex\\OneDrive\\Documents\\GitHub\\ReactNotion\\src\\components\\ToggleComponent.jsx",["38"],"import React, { Component } from 'react'\r\n\r\nexport default class ToggleComponent extends Component {\r\n  state = {\r\n    on:false,\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      on: !(this.state.on)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      children({\r\n        on: this.state.on,\r\n        toggle: this.toggle,\r\n      })\r\n    );\r\n    \r\n  }\r\n}\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":23,"column":22,"nodeType":"45","messageId":"46","endLine":23,"endColumn":24},{"ruleId":"43","severity":1,"message":"44","line":38,"column":41,"nodeType":"45","messageId":"46","endLine":38,"endColumn":43},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]