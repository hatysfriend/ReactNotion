[{"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\index.js":"1","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\App.js":"2","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\reportWebVitals.js":"3","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\PageComponent.jsx":"4","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\SidebarComponent.jsx":"5","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\HeaderComponent.jsx":"6"},{"size":507,"mtime":1610703688307,"results":"7","hashOfConfig":"8"},{"size":435,"mtime":1610806358276,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":544,"mtime":1610951941454,"results":"11","hashOfConfig":"8"},{"size":2781,"mtime":1610806747007,"results":"12","hashOfConfig":"8"},{"size":497,"mtime":1610949641280,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rppq08",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\index.js",[],["28","29"],"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\App.js",[],"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\reportWebVitals.js",[],"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\PageComponent.jsx",["30","31","32","33"],"C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\SidebarComponent.jsx",["34","35","36","37","38","39","40","41"],"import React, { useState, setState, createElement, useEffect } from \"react\";\r\nimport { Route, NavLink, HashRouter } from \"react-router-dom\"\r\nimport PageComponent from \"./PageComponent\";\r\nimport \"../styles/sidebar.css\";\r\n\r\n\r\n\r\n\r\nexport default function SidebarComponent() {\r\n  const [pageList, setPageList] = useState(defaultPage);\r\n  const [showtextbox, setShowTextbox] = useState(false);\r\n  let newpageName;\r\n\r\n  //function to enable textbox and button\r\n  function AddNewfile(bool) {\r\n    if (bool) {\r\n      return (\r\n      <React.Fragment>\r\n        <input id='newfile' className='addinput' type='text' />\r\n        <button className='addbtn' onClick={() => getfileName()}>âœ”</button>\r\n      </React.Fragment>\r\n      );\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //1. function to recive new page data\r\n  //2. when add new page btn clicked , store the new page data to setPageList()\r\n  function getfileName() {\r\n    const value = document.getElementById(\"newfile\").value\r\n    if (value == '' || value == null) {\r\n      document.getElementById(\"errorMessage\").value = 'error';\r\n    }\r\n    else {\r\n      let boolExistingName = false;\r\n      pageList.map(page=>{\r\n        if(page.pageName ==value)\r\n           boolExistingName=true;\r\n      })\r\n      if(!boolExistingName){\r\n        console.log(value);\r\n      newpageName = value;\r\n\r\n      const list = [...pageList]\r\n      list.push({\r\n        pageId: \"846u9ffqm\",\r\n        pageName: newpageName,\r\n        data: \"1\",\r\n      })\r\n      setPageList(list);\r\n      setShowTextbox(!showtextbox);\r\n\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      \r\n      <head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        </meta>\r\n\r\n      </head>\r\n      <body>\r\n        {/* Adding new page */}\r\n        <div className=\"sidenav a\">\r\n          <img src='imgs/icon.png' alt='' height='28px' width='35px' />\r\n          <div>\r\n            <img className='addbtn' onClick={() => setShowTextbox(!showtextbox)} \r\n            src='imgs/addNewPageIcon.webp' height='28px' width='35px'\r\n             alt=\"\"/>\r\n\r\n            {AddNewfile(showtextbox)}\r\n            <text className=\"errorMessage\" value='' id=\"errorMessage\"></text>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n          {/* showing pagelist */}\r\n          {pageList.map((page) => {\r\n            return <NavLink className='navFont' to=\"/\">{page.pageName}</NavLink>;\r\n          })}\r\n\r\n        </div>\r\n\r\n        {/* routing */}\r\n        {/* <div>\r\n          <Route path=\"/\" component={PageComponent}/>\r\n        </div> */}\r\n\r\n      </body>\r\n\r\n    </HashRouter>\r\n  );\r\n}\r\n// function loadPage(id) {\r\n// }\r\n\r\n\r\nconst defaultPage = [\r\n  {\r\n    pageId: \"846u9qm\",\r\n    pageName: \"React\",\r\n    data: \"1\",\r\n    file_inside: 'PageComponentID'\r\n  }\r\n];\r\n","C:\\Users\\hatys\\Documents\\Node\\NotionReact\\notion\\src\\components\\HeaderComponent.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"50","line":1,"column":38,"nodeType":"48","messageId":"49","endLine":1,"endColumn":44},{"ruleId":"46","severity":1,"message":"51","line":5,"column":12,"nodeType":"48","messageId":"49","endLine":5,"endColumn":20},{"ruleId":"46","severity":1,"message":"52","line":5,"column":22,"nodeType":"48","messageId":"49","endLine":5,"endColumn":33},{"ruleId":"46","severity":1,"message":"53","line":1,"column":27,"nodeType":"48","messageId":"49","endLine":1,"endColumn":35},{"ruleId":"46","severity":1,"message":"54","line":1,"column":37,"nodeType":"48","messageId":"49","endLine":1,"endColumn":50},{"ruleId":"46","severity":1,"message":"47","line":1,"column":52,"nodeType":"48","messageId":"49","endLine":1,"endColumn":61},{"ruleId":"46","severity":1,"message":"55","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":15},{"ruleId":"46","severity":1,"message":"56","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":33,"column":15,"nodeType":"59","messageId":"60","endLine":33,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":38,"column":24,"nodeType":"63","messageId":"64","endLine":38,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":39,"column":26,"nodeType":"59","messageId":"60","endLine":39,"endColumn":28},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'pageList' is assigned a value but never used.","'setPageList' is assigned a value but never used.","'setState' is defined but never used.","'createElement' is defined but never used.","'Route' is defined but never used.","'PageComponent' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]